on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'cdx-*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.1
        id: go
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: |
          go build ./cmd/cdx
          for GOOS in darwin linux; do
              for GOARCH in amd64; do
                  GOOS=$GOOS GOARCH=$GOARCH go build -ldflags "-X main.version=`./cdx tag latest -n cdx --head --fallback`" -v -o cdx-$GOOS-$GOARCH ./cmd/cdx
              done
          done
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            cdx release - ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Linux Release Asset
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./cdx-linux-amd64
          asset_name: cdx-linux-amd64
          asset_content_type: application/octet-stream
      - name: Upload Darwin Release Asset
        id: upload-release-asset-darwin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./cdx-darwin-amd64
          asset_name: cdx-darwin-amd64
          asset_content_type: application/octet-stream
